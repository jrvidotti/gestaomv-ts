/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SuperadminRouteImport } from './routes/superadmin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AuthLoginRouteImport } from './routes/_auth.login'
import { Route as AdminCoreIndexRouteImport } from './routes/admin/core/index'
import { Route as AdminCoreConfiguracoesRouteImport } from './routes/admin/core/configuracoes'
import { Route as AdminCoreUsersIndexRouteImport } from './routes/admin/core/users/index'
import { Route as AdminCoreUsersNovoRouteImport } from './routes/admin/core/users/novo'
import { Route as AdminCoreMeProfileRouteImport } from './routes/admin/core/_me/profile'
import { Route as AdminCoreMeAlterarSenhaRouteImport } from './routes/admin/core/_me/alterar-senha'
import { Route as AdminCoreUsersIdEditRouteImport } from './routes/admin/core/users/$id/edit'
import { ServerRoute as ApiUploadServerRouteImport } from './routes/api/upload'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc.$'
import { ServerRoute as ApiImagesSplatServerRouteImport } from './routes/api/images.$'

const rootServerRouteImport = createServerRootRoute()

const SuperadminRoute = SuperadminRouteImport.update({
  id: '/superadmin',
  path: '/superadmin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCoreIndexRoute = AdminCoreIndexRouteImport.update({
  id: '/admin/core/',
  path: '/admin/core/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCoreConfiguracoesRoute = AdminCoreConfiguracoesRouteImport.update({
  id: '/admin/core/configuracoes',
  path: '/admin/core/configuracoes',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCoreUsersIndexRoute = AdminCoreUsersIndexRouteImport.update({
  id: '/admin/core/users/',
  path: '/admin/core/users/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCoreUsersNovoRoute = AdminCoreUsersNovoRouteImport.update({
  id: '/admin/core/users/novo',
  path: '/admin/core/users/novo',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCoreMeProfileRoute = AdminCoreMeProfileRouteImport.update({
  id: '/admin/core/_me/profile',
  path: '/admin/core/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCoreMeAlterarSenhaRoute = AdminCoreMeAlterarSenhaRouteImport.update({
  id: '/admin/core/_me/alterar-senha',
  path: '/admin/core/alterar-senha',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminCoreUsersIdEditRoute = AdminCoreUsersIdEditRouteImport.update({
  id: '/admin/core/users/$id/edit',
  path: '/admin/core/users/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiUploadServerRoute = ApiUploadServerRouteImport.update({
  id: '/api/upload',
  path: '/api/upload',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiImagesSplatServerRoute = ApiImagesSplatServerRouteImport.update({
  id: '/api/images/$',
  path: '/api/images/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/superadmin': typeof SuperadminRoute
  '/login': typeof AuthLoginRoute
  '/admin': typeof AdminIndexRoute
  '/admin/core/configuracoes': typeof AdminCoreConfiguracoesRoute
  '/admin/core': typeof AdminCoreIndexRoute
  '/admin/core/alterar-senha': typeof AdminCoreMeAlterarSenhaRoute
  '/admin/core/profile': typeof AdminCoreMeProfileRoute
  '/admin/core/users/novo': typeof AdminCoreUsersNovoRoute
  '/admin/core/users': typeof AdminCoreUsersIndexRoute
  '/admin/core/users/$id/edit': typeof AdminCoreUsersIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/superadmin': typeof SuperadminRoute
  '/login': typeof AuthLoginRoute
  '/admin': typeof AdminIndexRoute
  '/admin/core/configuracoes': typeof AdminCoreConfiguracoesRoute
  '/admin/core': typeof AdminCoreIndexRoute
  '/admin/core/alterar-senha': typeof AdminCoreMeAlterarSenhaRoute
  '/admin/core/profile': typeof AdminCoreMeProfileRoute
  '/admin/core/users/novo': typeof AdminCoreUsersNovoRoute
  '/admin/core/users': typeof AdminCoreUsersIndexRoute
  '/admin/core/users/$id/edit': typeof AdminCoreUsersIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/superadmin': typeof SuperadminRoute
  '/_auth/login': typeof AuthLoginRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/core/configuracoes': typeof AdminCoreConfiguracoesRoute
  '/admin/core/': typeof AdminCoreIndexRoute
  '/admin/core/_me/alterar-senha': typeof AdminCoreMeAlterarSenhaRoute
  '/admin/core/_me/profile': typeof AdminCoreMeProfileRoute
  '/admin/core/users/novo': typeof AdminCoreUsersNovoRoute
  '/admin/core/users/': typeof AdminCoreUsersIndexRoute
  '/admin/core/users/$id/edit': typeof AdminCoreUsersIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/superadmin'
    | '/login'
    | '/admin'
    | '/admin/core/configuracoes'
    | '/admin/core'
    | '/admin/core/alterar-senha'
    | '/admin/core/profile'
    | '/admin/core/users/novo'
    | '/admin/core/users'
    | '/admin/core/users/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/superadmin'
    | '/login'
    | '/admin'
    | '/admin/core/configuracoes'
    | '/admin/core'
    | '/admin/core/alterar-senha'
    | '/admin/core/profile'
    | '/admin/core/users/novo'
    | '/admin/core/users'
    | '/admin/core/users/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/superadmin'
    | '/_auth/login'
    | '/admin/'
    | '/admin/core/configuracoes'
    | '/admin/core/'
    | '/admin/core/_me/alterar-senha'
    | '/admin/core/_me/profile'
    | '/admin/core/users/novo'
    | '/admin/core/users/'
    | '/admin/core/users/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SuperadminRoute: typeof SuperadminRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminCoreConfiguracoesRoute: typeof AdminCoreConfiguracoesRoute
  AdminCoreIndexRoute: typeof AdminCoreIndexRoute
  AdminCoreMeAlterarSenhaRoute: typeof AdminCoreMeAlterarSenhaRoute
  AdminCoreMeProfileRoute: typeof AdminCoreMeProfileRoute
  AdminCoreUsersNovoRoute: typeof AdminCoreUsersNovoRoute
  AdminCoreUsersIndexRoute: typeof AdminCoreUsersIndexRoute
  AdminCoreUsersIdEditRoute: typeof AdminCoreUsersIdEditRoute
}
export interface FileServerRoutesByFullPath {
  '/api/upload': typeof ApiUploadServerRoute
  '/api/images/$': typeof ApiImagesSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/upload': typeof ApiUploadServerRoute
  '/api/images/$': typeof ApiImagesSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/upload': typeof ApiUploadServerRoute
  '/api/images/$': typeof ApiImagesSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/upload' | '/api/images/$' | '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/upload' | '/api/images/$' | '/api/trpc/$'
  id: '__root__' | '/api/upload' | '/api/images/$' | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiUploadServerRoute: typeof ApiUploadServerRoute
  ApiImagesSplatServerRoute: typeof ApiImagesSplatServerRoute
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/superadmin': {
      id: '/superadmin'
      path: '/superadmin'
      fullPath: '/superadmin'
      preLoaderRoute: typeof SuperadminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/core/': {
      id: '/admin/core/'
      path: '/admin/core'
      fullPath: '/admin/core'
      preLoaderRoute: typeof AdminCoreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/core/configuracoes': {
      id: '/admin/core/configuracoes'
      path: '/admin/core/configuracoes'
      fullPath: '/admin/core/configuracoes'
      preLoaderRoute: typeof AdminCoreConfiguracoesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/core/users/': {
      id: '/admin/core/users/'
      path: '/admin/core/users'
      fullPath: '/admin/core/users'
      preLoaderRoute: typeof AdminCoreUsersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/core/users/novo': {
      id: '/admin/core/users/novo'
      path: '/admin/core/users/novo'
      fullPath: '/admin/core/users/novo'
      preLoaderRoute: typeof AdminCoreUsersNovoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/core/_me/profile': {
      id: '/admin/core/_me/profile'
      path: '/admin/core/profile'
      fullPath: '/admin/core/profile'
      preLoaderRoute: typeof AdminCoreMeProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/core/_me/alterar-senha': {
      id: '/admin/core/_me/alterar-senha'
      path: '/admin/core/alterar-senha'
      fullPath: '/admin/core/alterar-senha'
      preLoaderRoute: typeof AdminCoreMeAlterarSenhaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/core/users/$id/edit': {
      id: '/admin/core/users/$id/edit'
      path: '/admin/core/users/$id/edit'
      fullPath: '/admin/core/users/$id/edit'
      preLoaderRoute: typeof AdminCoreUsersIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/upload': {
      id: '/api/upload'
      path: '/api/upload'
      fullPath: '/api/upload'
      preLoaderRoute: typeof ApiUploadServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/images/$': {
      id: '/api/images/$'
      path: '/api/images/$'
      fullPath: '/api/images/$'
      preLoaderRoute: typeof ApiImagesSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SuperadminRoute: SuperadminRoute,
  AuthLoginRoute: AuthLoginRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminCoreConfiguracoesRoute: AdminCoreConfiguracoesRoute,
  AdminCoreIndexRoute: AdminCoreIndexRoute,
  AdminCoreMeAlterarSenhaRoute: AdminCoreMeAlterarSenhaRoute,
  AdminCoreMeProfileRoute: AdminCoreMeProfileRoute,
  AdminCoreUsersNovoRoute: AdminCoreUsersNovoRoute,
  AdminCoreUsersIndexRoute: AdminCoreUsersIndexRoute,
  AdminCoreUsersIdEditRoute: AdminCoreUsersIdEditRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiUploadServerRoute: ApiUploadServerRoute,
  ApiImagesSplatServerRoute: ApiImagesSplatServerRoute,
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
